name: Windows

on:
  push:
    tags:
      - "*"

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2019
    env:
      BOOST_ROOT: C:/local/boost_1_72_0
    steps:
      - uses: actions/checkout@master

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Install Boost
        shell: powershell
        run: |
          echo "${env:BOOST_ROOT}"
          $Url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.72.0/boost_1_72_0-msvc-14.2-64.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
          Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=${env:BOOST_ROOT}"

      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $ccx_version = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "syfr-cli-win64-v$ccx_version"
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -G "Visual Studio 16 2019" ..
          msbuild concealX.sln /p:Configuration=Release /m
          cd src\Release
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/src/Release/$release_name.zip"
          mkdir "$release_name"
          cp *.exe "$release_name/"
          echo "sha256=${sha256}" >> $env:GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $env:GITHUB_OUTPUT
          echo "asset_path=${asset_path}" >> $env:GITHUB_OUTPUT
          echo "ccx_version=${ccx_version}" >> $env:GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Syfer Core CLI v${{ steps.build.outputs.ccx_version }}
          body: |
            [Download for Windows](../../releases/download/${{ steps.build.outputs.ccx_version }}/${{ steps.build.outputs.release_name }}) **${{ steps.build.outputs.release_name }}**
            `SHA256 : ${{ steps.build.outputs.sha256 }}`
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}